% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseModel.R
\name{parseModel}
\alias{parseModel}
\title{parseModel - Parse Rdistance model}
\usage{
parseModel(
  data,
  formula = NULL,
  likelihood = "halfnorm",
  w.lo = 0,
  w.hi = NULL,
  expansions = 0,
  series = "cosine",
  x.scl = 0,
  g.x.scl = 1,
  outputUnits = NULL
)
}
\arguments{
\item{formula}{A standard formula object.  For example, \code{dist ~ 1}, 
\code{dist ~ covar1 + covar2}). The left-hand side (before \code{~})
is the name of the vector containing off-transect or radial detection distances.  
The right-hand side contains the names of covariate 
vectors to fit in the detection
function, and potentially group sizes. 
Covariates can be either detection level 
or transect level and can appear in  \code{data} or exist in the 
global working environment. Regular R scoping 
rules apply.}

\item{likelihood}{String specifying the likelihood to fit. Built-in 
likelihoods at present are "logistic", "halfnorm", 
"hazrate", "negexp", and "Gamma".}

\item{w.lo}{Lower or left-truncation limit of the distances in distance data. 
This is the minimum possible off-transect distance. Default is 0.  If 
\code{w.lo} is greater than 0, it must be assigned measurement units
using \code{units(w.lo) <- "<units>"} or 
\code{w.lo <- units::set_units(w.lo, "<units>")}. 
See examples in the help for \code{set_units}.}

\item{w.hi}{Upper or right-truncation limit of the distances 
in \code{dist}. This is the maximum off-transect distance that 
could be observed. If unspecified (i.e., NULL), 
right-truncation is set to the maximum of the observed 
distances.  If \code{w.hi} is specified, it must have associated 
measurement units.  Assign measurement units
using \code{units(w.hi) <- "<units>"} or 
\code{w.hi <- units::set_units(w.hi, "<units>")}. 
See examples in the help for \code{set_units}.}

\item{expansions}{A scalar specifying the number of terms 
in \code{series} to compute. Depending on the series, 
this could be 0 through 5.  The default of 0 equates 
to no expansion terms of any type.  No expansion terms 
are allowed (i.e., \code{expansions} is forced to 0) if 
covariates are present in the detection function 
(i.e., right-hand side of \code{formula} includes
something other than \code{1}).}

\item{series}{If \code{expansions} > 0, this string 
specifies the type of expansion to use. Valid values at 
present are 'simple', 'hermite', and 'cosine'.}

\item{x.scl}{The x coordinate (a distance) at which the 
detection function will be scaled.  \code{g.x.scl} can be a distance
or the string "max".  
When \code{x.scl} is specified (i.e., not 0 or "max"), it must have measurement 
units assigned using either \code{library(units);units(x.scl) <- '<units>'}
or \code{x.scl <- units::set_units(x.scl, <units>)}. See
\code{units::valid_udunits()} for valid symbolic units.}

\item{g.x.scl}{Height of the distance function at coordinate \code{x}. 
The distance function 
will be scaled so that g(\code{x.scl}) = \code{g.x.scl}. 
If \code{g.x.scl} is not 
a data frame, it must be a numeric value (vector of length 1) 
between 0 and 1.}

\item{outputUnits}{A string specifying the symbolic measurement 
units for results. Valid units are listed in \code{units::valid_udunits()}.
The strings for common distance symbolic units are: 
"m" - meters, "ft" - feet, "cm" - centimeters, "mm" - 
millimeters, "mi" - miles, "nmile" - 
nautical miles ("nm" is nano meters), "in" - inches, 
"yd" - yards, "km" - kilometers, "fathom" - fathoms, 
"chains" - chains, and "furlong" - furlongs.  
If \code{outputUnits} is unspecified (NULL),
output units will be the same as those on 
distances in \code{data}.}
}
\value{
An Rdistance model frame, which is an object of class 
"dfunc". 
Rdistance model frames are lists containing distance 
model components but not estimates.  Model frames contain 
everything necessary to fit an Rdistance mode, such as covariates, 
minimum and maximum distances, the form of the likelihood, 
number of expansions, etc.  Rdistance model frames contain a 
subset of fitted Rdistance model components.
}
\description{
Parse an 'Rdistance' formula and produce a list containing all model 
parameters.
}
\details{
This routine is not intended to be called by the user.  It is called 
from the model estimation routines in \code{Rdistance}.
}
\examples{

sparrowDf <- Rdistance::RdistDf(sparrowSiteData
   , sparrowDetectionData
   , by = NULL
   , pointSurvey = FALSE
   , observer = "single"
   , .detectionCol = "detections")
   
ml <- Rdistance::parseModel(sparrowDf
   , formula = dist ~ 1 + observer + groupsize(groupsize)
   , likelihood = "halfnorm"
   , w.lo = 0
   , w.hi = NULL
   , series = "cosine"
   , x.scl = 0
   , g.x.scl = 1
   , outputUnits = "m"
   )
   

}
\seealso{
[RdistDf()], which returns an Rdistance \emph{data} frame;
[dfuncEstim()], which returns an Rdistance \emph{fitted} model.
}
