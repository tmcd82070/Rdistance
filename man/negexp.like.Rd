% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/negexp.like.R
\name{negexp.like}
\alias{negexp.like}
\title{negexp.like - Negative exponential likelihood}
\usage{
negexp.like(a, dist, covars)
}
\arguments{
\item{a}{A vector of covariate coefficients and other likelihood 
parameter values. Length 
should be (number of covariates including intercept) + 
(number of expansions) + (likelihood %in% c("hazrate","logistic"). 
Coefficients should all be on a log scale
because the link function for all likelihoods is exponential.}

\item{dist}{A numeric vector containing 
the observed detection distances.}

\item{covars}{A data frame or matrix containing values 
of the covariates for each distance observation.}
}
\value{
A list containing two components. One component, 
named \code{L.unscaled}, is a vector of the likelihood 
values at every
observed distance. L is "unscaled" because it does 
not integrate to one. Scaling happens elsewhere.

The second component, named \code{params},
is a data frame of the likelihood's (canonical) parameters 
for every input distance. Columns in the data frame
are named \emph{par1}, \emph{par2}, ..., \emph{parN}. Size
of the data frame is number of observations by number 
of canonical parameters.

Assuming \code{L} is the list returned by this function, 
the negative log likelihood is \code{-sum(log(L$L.unscaled / I), na.rm=T)}, 
where \code{I} is the integration constant, or 
area under the likelihood between 
\code{w.lo} and \code{w.hi}. 
Note that returned likelihood values for distances less 
than \code{w.lo} or greater than \code{w.hi} are \code{NA}; 
hence, \code{na.rm=TRUE} in the sum. 
Values in \code{L$L.unscaled} are always greater 
than or equal to zero.
}
\description{
Computes the negative exponential distance function.
}
\details{
The negative exponential likelihood is 
\deqn{f(x|a) = \exp(-ax)}{f(x|a) = exp( -a*x )} where \eqn{a} is the 
slope parameter to be estimated.
}
\examples{
d <- seq(0, 100, length=100)
covs <- matrix(1,length(d),1)
negexp.like(log(0.01), d, covs)

# Changing slope parameter
plot(d, negexp.like(log(0.1), d, covs)$L.unscaled, type="l", col="red")
lines(d, negexp.like(log(0.05), d, covs)$L.unscaled, col="blue")

}
\seealso{
\code{\link{dfuncEstim}},
         \code{\link{hazrate.like}},
         \code{\link{uniform.like}},
         \code{\link{negexp.like}},
         \code{\link{Gamma.like}},
         \code{\link{triangle.like}}
}
