% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logistic.like.R
\name{logistic.like}
\alias{logistic.like}
\title{logistic.like - Logistic distance function likelihood}
\usage{
logistic.like(a, dist, covars)
}
\arguments{
\item{a}{A vector of covariate coefficients and other likelihood 
parameter values. Length 
should be (number of covariates including intercept) + 
(number of expansions) + (likelihood %in% c("hazrate","logistic"). 
Coefficients should all be on a log scale
because the link function for all likelihoods is exponential.}

\item{dist}{A numeric vector containing 
the observed detection distances.}

\item{covars}{A data frame or matrix containing values 
of the covariates for each distance observation.}
}
\value{
A list containing two components. One component, 
named \code{L.unscaled}, is a vector of the likelihood 
values at every
observed distance. L is "unscaled" because it does 
not integrate to one. Scaling happens elsewhere.

The second component, named \code{params},
is a data frame of the likelihood's (canonical) parameters 
for every input distance. Columns in the data frame
are named \emph{par1}, \emph{par2}, ..., \emph{parN}. Size
of the data frame is number of observations by number 
of canonical parameters.

Assuming \code{L} is the list returned by this function, 
the negative log likelihood is \code{-sum(log(L$L.unscaled / I), na.rm=T)}, 
where \code{I} is the integration constant, or 
area under the likelihood between 
\code{w.lo} and \code{w.hi}. 
Note that returned likelihood values for distances less 
than \code{w.lo} or greater than \code{w.hi} are \code{NA}; 
hence, \code{na.rm=TRUE} in the sum. 
Values in \code{L$L.unscaled} are always greater 
than or equal to zero.
}
\description{
Computes a two parameter logistic distance function.
}
\details{
The 'logistic' likelihood contains two 
parameters.  Parameter \eqn{a} determines the scale and is 
labeled 'threshold' in Rdistance.  Parameter \eqn{b} determines 
sharpness (slope) of the likelihood's decrease at \eqn{a} and is labeled
'knee' in Rdistance.  
(This function is called the 
\emph{heavy side} function in engineering).  The form 
of the function is, 
\deqn{f(x|a,b) = 1 - \frac{1}{1 + \exp(-b(x-a))} = 
\frac{\exp( -b(x-a) )}{1 + exp( -b(x-a) )},}{%
f(x|a,b) = 1 - 1 / (1 + exp(-b*(x-a))) = exp(-b*(x-a)) / (1 + exp(-b*(x-a))).} 

Parameter \eqn{a} is the location (distance) where the 
(unscaled) likelihood equals  
0.5. That is, the inverse likelihood of 0.5 
is \eqn{a}, before scaling; or, 
\code{logistic.like( c(a,b), a, matrix(1,1,1))} equals 
\code{0.5}). 

Parameter \eqn{b} is slope of function 
at \eqn{a}.  
Prior to scaling, 
slope of the likelihood at \eqn{a} is \eqn{-b/4}. 
If \eqn{b}
is large, the "knee" is sharp and the likelihood can look 
uniform with support from 
\code{w.lo} to \eqn{a/f(0)}.  If \eqn{b} is small, the 
"knee" is shallow and the density of observations declines 
in an elongated "S" shape pivoting at \eqn{a/f(0)}.  
As \eqn{b} grows large and assuming f(0) = 1, the effective 
strip width approaches \eqn{a}.  

See plots in Examples.
}
\examples{
d <- seq(0, 100, length=100)
covs <- matrix(1,length(d),1)
logistic.like(c(log(20), 1), d, covs)

# Changing threshold parameter
plot(x, logistic.like(c(log(20), 20), x, covs)$L.unscaled, type="l", col="red")
lines(x, logistic.like(c(log(40), 20), x, covs)$L.unscaled, col="blue")
ablines(h = 0.5, lty = 2)
ablines(v = c(20,40), lty = 2)

# Changing knee parameter
plot(x, logistic.like(c(log(50), 100), x, covs)$L.unscaled, type="l", col="red")
lines(x, logistic.like(c(log(50), 1), x, covs)$L.unscaled, col="blue")
lines(x, logistic.like(c(log(50), .1), x, covs)$L.unscaled, col="orange")

         
}
\seealso{
\code{\link{dfuncEstim}},
         \code{\link{hazrate.like}},
         \code{\link{uniform.like}},
         \code{\link{negexp.like}},
         \code{\link{Gamma.like}},
         \code{\link{triangle.like}}
}
