% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/triangle.like.R
\name{triangle.like}
\alias{triangle.like}
\title{triangle.like - Triangular distance function}
\usage{
triangle.like(a, dist, covars)
}
\arguments{
\item{a}{A vector of covariate coefficients and other likelihood 
parameter values. Length 
should be (number of covariates including intercept) + 
(number of expansions) + (likelihood %in% c("hazrate","logistic"). 
Coefficients should all be on a log scale
because the link function for all likelihoods is exponential.}

\item{dist}{A numeric vector containing 
the observed detection distances.}

\item{covars}{A data frame or matrix containing values 
of the covariates for each distance observation.}
}
\value{
A list containing two components. One component, 
named \code{L.unscaled}, is a vector of the likelihood 
values at every
observed distance. L is "unscaled" because it does 
not integrate to one. Scaling happens elsewhere.

The second component, named \code{params},
is a data frame of the likelihood's (canonical) parameters 
for every input distance. Columns in the data frame
are named \emph{par1}, \emph{par2}, ..., \emph{parN}. Size
of the data frame is number of observations by number 
of canonical parameters.

Assuming \code{L} is the list returned by this function, 
the negative log likelihood is \code{-sum(log(L$L.unscaled / I), na.rm=T)}, 
where \code{I} is the integration constant, or 
area under the likelihood between 
\code{w.lo} and \code{w.hi}. 
Note that returned likelihood values for distances less 
than \code{w.lo} or greater than \code{w.hi} are \code{NA}; 
hence, \code{na.rm=TRUE} in the sum. 
Values in \code{L$L.unscaled} are always greater 
than or equal to zero.
}
\description{
Computes the triangular likelihood for use as a distance function. 
The triangular likelihood has constant downward slope to a 
maximum sighting distance.
}
\details{
The triangular likelihood 
is, 
\deqn{f(d|a) = 1 - \frac{d}{a}}{f(d|a) = 1 - d/a}
for \eqn{0 \leq d \leq a}{0 <= d <= a}, and 0 for all
\eqn{d}{d} less than 0 or greater than \eqn{a}{a}.  
Covariates effect parameter \eqn{a}{a} 
via the log link function, i.e., \eqn{a = exp(x'b)},
where \eqn{x} is the vector of covariate values 
associated with distance \eqn{d} and \eqn{b}
is the vector of estimated coefficients. Area under
the likelihood is \eqn{a/2}.
}
\examples{

d <- seq(0, 100, length=100)
covs <- matrix(1,length(d),1)
triangle.like( log(80), d, covs )

plot(d, triangle.like( log(80), d, covs)$L.unscaled, type = "l", col = "blue")
lines(d, triangle.like( log(60), d, covs)$L.unscaled, col = "red")

# Likelihood profile for sparrow data
sparrowDf <- RdistDf(sparrowSiteData, sparrowDetectionData)
dist <- tidyr::unnest(sparrowDf, cols = detections)$dist
covs <- matrix(1,length(dist),1)
a <- seq(75, 210, length= 100)
L <- rep(NA, length(a))
for(i in 1:length(a)){
  y <- triangle.like(log(a[i]), dist, covs)$L.unscaled * (2/a[i])
  y[ !is.na(y) & y <= 0] <- .Machine$double.eps
  L[i] <- -sum(log(y), na.rm = TRUE) 
}
plot(a,L)
abline(v = 146)

}
\seealso{
\code{\link{dfuncEstim}},
         \code{\link{hazrate.like}},
         \code{\link{uniform.like}},
         \code{\link{negexp.like}},
         \code{\link{Gamma.like}},
         \code{\link{triangle.like}}
}
