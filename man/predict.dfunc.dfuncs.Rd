% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.dfunc.dfuncs.R
\name{predict.dfunc.dfuncs}
\alias{predict.dfunc.dfuncs}
\title{predict.dfunc.dfuncs - Predict distance functions}
\usage{
\method{predict}{dfunc.dfuncs}(x, params, distances, isSmooth)
}
\arguments{
\item{x}{An estimated detection function object, normally 
produced by calling \code{\link{dfuncEstim}}.}

\item{params}{A matrix of distance function parameters. 
Rows are observations, columns contain the set of parameters
(canonical and expansion) for each observation.}

\item{distances}{A vector or 1-column matrix of 
distances at which to evaluate 
distance functions, when distance functions 
are requested.  \code{distances} must have measurement units. 
Any distances outside the observation 
strip (\code{x$w.lo} to \code{x$w.hi}) are discarded.  If 
\code{distances} is NULL, a sequence 
of \code{getOption("Rdistance_intEvalPts")} (default 101) evenly 
spaced distances between 
\code{x$w.lo} and \code{x$w.hi} (inclusive) is used.}

\item{isSmooth}{Logical.  TRUE if the distance function 
is smoothed (and hence has no parameters).}
}
\value{
A matrix of distance function values, of size 
length(distances) X nrow(params).  Each row of params
is associated with a column, i.e., a different distance 
function.  Distances are associated with rows, 
i.e., use matplot(d,return) to plot values on separate distance 
functions specified by rows of params.
}
\description{
An internal prediction function to predict a distance 
function.  This version allows for matrix inputs and 
uses matrix operations, and is thus faster than earlier
looping versions.
}
