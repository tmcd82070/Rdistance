% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EDR.R
\name{EDR}
\alias{EDR}
\title{EDR - Effective Detection Radius (EDR) for point transects}
\usage{
EDR(x, newdata = NULL)
}
\arguments{
\item{x}{An estimated detection function object, normally 
produced by calling \code{\link{dfuncEstim}}.}

\item{newdata}{A data frame containing new values for 
covariates at which either
ESW's or EDR's will be computed. If NULL and 
  \code{x} contains covariates, the  
  covariates stored in
  \code{x} are used (like \code{\link{predict.lm}}).
  If not NULL, covariate values in \code{newdata}
  are used. 
  See \bold{Value} section for more information.}
}
\value{
If \code{newdata} is present, the returned value is 
a vector of effective sampling distances for values of the 
covariates in \code{newdata} with length equal to 
the number of rows in \code{newdata}. 
If \code{newdata} is NULL, the returned value is a vector of effective
sampling distances for covariate values in \code{x} and has 
the number of detections in \code{x}.  The returned vector 
has measurement units, i.e., \code{x$outputUnits}.
}
\description{
Computes Effective Detection Radius (EDR) for estimated 
  detection functions on point transects.  
  See \code{\link{ESW}} is for line transects.
}
\details{
Effective Detection Radius is the integral under the 
detection function times distance. \if{latex}{I.e., 
    \deqn{EDR = \int_{w.lo}^{w.hi} xg(x)dx,} 
  where \eqn{g(x)} is the distance
  function scaled so that \eqn{g(x.scl) = g.x.scl}
  and \eqn{w.lo} and \eqn{w.hi} are the lower
  and upper truncation limits.  }
}
\section{Numeric Integration}{
 
Rdistance uses Simpson's composite 1/3 rule to numerically 
integrate under distance functions. The number of points evaluated 
during numerical integration is controlled by 
\code{options(Rdistance_intEvalPts)} (default 101).
Option 'Rdistance_intEvalPts' must be odd because Simpson's rule
requires an even number of intervals (hence, odd number of points). 
Lower values of 'Rdistance_intEvalPts' increase calculation speeds; 
but, decrease accuracy.
'Rdistance_intEvalPts' must be >= 5.  A warning is thrown if 
'Rdistance_intEvalPts' < 29. Empirical tests by the author 
suggest 'Rdistance_intEvalPts' values >= 30 are accurate 
to several decimal points and that all 'Rdistance_intEvalPts' >= 101 produce 
identical results in all but pathological cases.
}

\examples{
# Load example thrasher data (point transect survey type)
data(thrasherDf)

# Fit half-normal detection function
dfunc <- thrasherDf |> dfuncEstim(formula=dist~1)

# Compute effective detection radius (EDR)
EDR(dfunc)
effectiveDistance(dfunc) # same
  
}
\seealso{
\code{\link{dfuncEstim}}, \code{\link{ESW}}, 
\code{\link{effectiveDistance}}
}
\keyword{modeling}
